version: "3.9"

services:
  db:
    container_name: db
    image: postgres:15
    ports:
      - "5432:5432"
    networks:
      bakertech-network:
        ipv4_address: 172.25.0.4
    extra_hosts:
      - "api:172.25.0.3"
    env_file:
      - env/db.env
    volumes:
      - ./backend/db/init.sql:/init.sql
      - ./backend/db/init_keycloak.sql:/init_keycloak.sql
      - ./backend/db/init_structure.sh:/docker-entrypoint-initdb.d/init_structure.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U bakertech" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    networks:
      bakertech-network:
        ipv4_address: 172.25.0.5
    extra_hosts:
      - "api:172.25.0.3"
      - "db:172.25.0.4"
    env_file:
      - env/keycloak.env
    ports:
      - "9990:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/realms/master" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  bakertech-api:
    image: maven:3.8.4-openjdk-17-slim
    container_name: bakertech-api
    volumes:
      - ./backend/pom.xml:/bakertech-api/pom.xml
      - ./backend/src:/bakertech-api/src
    command: >
      bash -c "cd bakertech-api
      && mvn package -DskipTests=true
      && java -jar $JVM_ARGS /bakertech-api/target/bakertech-api.jar"
    ports:
      - "8080:8080"
      - "9009:9009"
    networks:
      bakertech-network:
        ipv4_address: 172.25.0.3
    extra_hosts:
      - "db:172.25.0.4"
      - "gateway:172.25.0.2"
      - "keycloak:172.25.0.5"
    env_file:
      - env/api.env
    healthcheck:
      test: [ "CMD-SHELL", "curl 127.0.0.1:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      keycloak:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: no

#  bakertech-frontend:
#    image: node:20.2.0
#    container_name: bakertech-frontend
#    volumes:
#      - ./frontend/package.json:/package.json
#      - ./frontend/package-lock.json:/package-lock.json
#      - ./frontend/tsconfig.json:/tsconfig.json
#      - ./frontend/public:/public
#      - ./frontend/src:/src
#    command: >
#      bash -c "npm install
#      && npm run start"
#    ports:
#      - "3000:3000"
#    networks:
#      bakertech-network:
#        ipv4_address: 172.25.0.2
#    extra_hosts:
#      - "api:172.25.0.3"
#    env_file:
#      - frontend/src/.env
#    healthcheck:
#      test: [ "CMD-SHELL", "curl 127.0.0.1:3000" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    depends_on:
#      bakertech-api:
#        condition: service_healthy
#    restart: no

networks:
  bakertech-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24